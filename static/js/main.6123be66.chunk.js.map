{"version":3,"sources":["components/Scene/Scene.elements.js","components/Scene/Script.js","components/Scene/Scene.js","App.js","index.js"],"names":["ContainerScene","styled","div","currentRef","scene","THREE","camera","add","position","set","lookAt","renderer","setSize","orbitControls","OrbitControls","domElement","enableDamping","resize","clientWidth","clientHeight","aspect","updateProjectionMatrix","window","addEventListener","animate","update","render","requestAnimationFrame","cube","color","Scene","mountRef","useRef","useEffect","current","appendChild","initScene","dispose","removeChild","className","ref","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"kMAEaA,E,MAAiBC,EAAOC,IAAV,8D,eCEvBC,EAAa,KAGXC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IAAwB,GAAI,EAAW,GAAK,KAC/DD,EAAMG,IAAID,GACVA,EAAOE,SAASC,IAAI,EAAG,EAAG,GAC1BH,EAAOI,OAAO,IAAIL,KAElB,IAAMM,EAAW,IAAIN,IACrBM,EAASC,QAAQ,IAAK,KAGtB,IAAMC,EAAgB,IAAIC,IAAcR,EAAQK,EAASI,YACzDF,EAAcG,eAAgB,EAG9B,IAAMC,EAAS,WACbN,EAASC,QAAQT,EAAWe,YAAaf,EAAWgB,cACpDb,EAAOc,OAASjB,EAAWe,YAAcf,EAAWgB,aACpDb,EAAOe,0BAETC,OAAOC,iBAAiB,SAAUN,IAGlB,SAAVO,IACJX,EAAcY,SACdd,EAASe,OAAOtB,EAAOE,GACvBqB,sBAAsBH,GAExBA,GAGA,IAAMI,EAAO,IAAIvB,IACf,IAAIA,IAAwB,EAAG,EAAG,GAClC,IAAIA,IAAwB,CAAEwB,MAAO,SAEvCzB,EAAMG,IAAIqB,GAGH,I,OCxBQE,EAhBD,WACZ,IAAMC,EAAWC,iBAAO,MAUxB,OARAC,qBAAU,WAGR,ODkCqB,SAACF,GACxB5B,EAAa4B,EAASG,QACtBjB,IACAd,EAAWgC,YAAYxB,EAASI,YCvC9BqB,CAAUL,GAEH,WD0CT3B,EAAMiC,UACNlC,EAAWmC,YAAY3B,EAASI,eCxC7B,IAGD,cAACf,EAAD,CAAgBuC,UAAU,iBAAiBC,IAAKT,KCNrCU,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCANC,IAAShB,OACP,cAAC,IAAMiB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6123be66.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ContainerScene = styled.div`\n  width: 100%;\n  height: 100vh;\n`;\n","import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\n//Global variables\nlet currentRef = null;\n\n//Scene, camera, renderer\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(25, 100 / 100, 0.1, 100);\nscene.add(camera);\ncamera.position.set(5, 5, 5);\ncamera.lookAt(new THREE.Vector3());\n\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(100, 100);\n\n//OrbitControls\nconst orbitControls = new OrbitControls(camera, renderer.domElement);\norbitControls.enableDamping = true;\n\n//Resize canvas\nconst resize = () => {\n  renderer.setSize(currentRef.clientWidth, currentRef.clientHeight);\n  camera.aspect = currentRef.clientWidth / currentRef.clientHeight;\n  camera.updateProjectionMatrix();\n};\nwindow.addEventListener(\"resize\", resize);\n\n//Animate the scene\nconst animate = () => {\n  orbitControls.update();\n  renderer.render(scene, camera);\n  requestAnimationFrame(animate);\n};\nanimate();\n\n//cube\nconst cube = new THREE.Mesh(\n  new THREE.BoxBufferGeometry(1, 1, 1),\n  new THREE.MeshBasicMaterial({ color: 0x00ff00 })\n);\nscene.add(cube);\n\n//Init and mount the scene\nexport const initScene = (mountRef) => {\n  currentRef = mountRef.current;\n  resize();\n  currentRef.appendChild(renderer.domElement);\n};\n\n//Dismount and clena up the buffer from the scene\nexport const cleanUpScene = () => {\n  scene.dispose();\n  currentRef.removeChild(renderer.domElement);\n};\n","import { useEffect, useRef } from \"react\";\nimport { ContainerScene } from \"./Scene.elements\";\nimport { cleanUpScene, initScene } from \"./Script\";\n\nconst Scene = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    initScene(mountRef);\n\n    return () => {\n      cleanUpScene();\n    };\n  }, []);\n\n  return (\n    <ContainerScene className='SceneContainer' ref={mountRef}></ContainerScene>\n  );\n};\n\nexport default Scene;\n","import { Scene } from \"./components\";\n\nfunction App() {\n  return (\n    <>\n      <Scene />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}